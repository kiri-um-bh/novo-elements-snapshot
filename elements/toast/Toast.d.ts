import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { DeferredPromise } from '../../utils';
import * as i0 from "@angular/core";
export declare class NovoToastElement implements OnInit, OnChanges {
    private sanitizer;
    theme: string;
    icon: string;
    title: string;
    action: string;
    hasDialogue: boolean;
    link: string;
    isCloseable: boolean;
    set message(m: string);
    closed: EventEmitter<any>;
    _message: SafeHtml;
    show: boolean;
    animate: boolean;
    parent: any;
    launched: boolean;
    position: any;
    time: any;
    iconClass: string;
    alertTheme: string;
    embedded: any;
    onActionPromise: DeferredPromise;
    constructor(sanitizer: DomSanitizer);
    ngOnInit(): void;
    ngOnChanges(changes?: SimpleChanges): void;
    clickHandler(event: any): void;
    close(event: any): void;
    actionHandler(event: any): void;
    onAction(fn: () => void): Promise<void>;
    static ɵfac: i0.ɵɵFactoryDef<NovoToastElement, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<NovoToastElement, "novo-toast", never, { "theme": "theme"; "icon": "icon"; "title": "title"; "action": "action"; "hasDialogue": "hasDialogue"; "link": "link"; "isCloseable": "isCloseable"; "message": "message"; }, { "closed": "closed"; }, never, ["*"]>;
}
