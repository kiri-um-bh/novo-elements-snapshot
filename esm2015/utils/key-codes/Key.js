//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"Key.js","sourceRoot":"/home/runner/work/novo-elements/novo-elements/projects/novo-elements/src/","sources":["utils/key-codes/Key.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * A const enum that includes all non-printable string values one can expect from $event.key.\n * For example, this enum includes values like \"CapsLock\", \"Backspace\", and \"AudioVolumeMute\",\n * but does not include values like \"a\", \"A\", \"#\", \"é\", or \"¿\".\n * Auto generated from MDN: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values#Speech_recognition_keys\n */\nexport declare const enum Key {\n  /**\n   * The user agent wasn't able to map the event's virtual keycode to a specific key value.\n   * This can happen due to hardware or software constraints, or because of constraints around the platform on which the user agent is running.\n   */\n  Unidentified = 'Unidentified',\n\n  /** The Alt (Alternative) key. */\n  Alt = 'Alt',\n\n  /** The AltGr or AltGraph (Alternate Graphics) key. Enables the ISO Level 3 shift modifier (where Shift is the level 2 modifier). */\n  AltGraph = 'AltGraph',\n\n  /** The Caps Lock key. Toggles the capital character lock on and off for subsequent input. */\n  CapsLock = 'CapsLock',\n\n  /** The Control, Ctrl, or Ctl key. Allows typing control characters. */\n  Control = 'Control',\n\n  /** The Fn (Function modifier) key. Used to allow generating function key (F1–F15, for instance) characters on keyboards without a dedicated function key area. Often handled in hardware so that events aren't generated for this key. */\n  Fn = 'Fn',\n\n  /** The FnLock or F-Lock (Function Lock) key.Toggles the function key mode described by \"Fn\" on and off. Often handled in hardware so that events aren't generated for this key. */\n  FnLock = 'FnLock',\n\n  /** The Hyper key. */\n  Hyper = 'Hyper',\n\n  /** The Meta key. Allows issuing special command inputs. This is the Windows logo key, or the Command or ⌘ key on Mac keyboards. */\n  Meta = 'Meta',\n\n  /** The NumLock (Number Lock) key. Toggles the numeric keypad between number entry some other mode (often directional arrows). */\n  NumLock = 'NumLock',\n\n  /** The Scroll Lock key. Toggles between scrolling and cursor movement modes. */\n  ScrollLock = 'ScrollLock',\n\n  /** The Shift key. Modifies keystrokes to allow typing upper (or other) case letters, and to support typing punctuation and other special characters. */\n  Shift = 'Shift',\n\n  /** The Super key. */\n  Super = 'Super',\n\n  /** The Symbol modifier key (found on certain virtual keyboards). */\n  Symbol = 'Symbol',\n\n  /** The Symbol Lock key. */\n  SymbolLock = 'SymbolLock',\n\n  /** The Enter or ↵ key (sometimes labeled Return). */\n  Enter = 'Enter',\n\n  /** The Horizontal Tab key, Tab. */\n  Tab = 'Tab',\n\n  /** The down arrow key. */\n  ArrowDown = 'ArrowDown',\n\n  /** The left arrow key. */\n  ArrowLeft = 'ArrowLeft',\n\n  /** The right arrow key. */\n  ArrowRight = 'ArrowRight',\n\n  /** The up arrow key. */\n  ArrowUp = 'ArrowUp',\n\n  /** The End key. Moves to the end of content. */\n  End = 'End',\n\n  /** The Home key. Moves to the start of content. */\n  Home = 'Home',\n\n  /** The Page Down (or PgDn) key. Scrolls down or displays the next page of content. */\n  PageDown = 'PageDown',\n\n  /** The Page Up (or PgUp) key. Scrolls up or displays the previous page of content. */\n  PageUp = 'PageUp',\n\n  /** The Backspace key. This key is labeled Delete on Mac keyboards. */\n  Backspace = 'Backspace',\n\n  /** The Clear key. Removes the currently selected input. */\n  Clear = 'Clear',\n\n  /** The Copy key (on certain extended keyboards). */\n  Copy = 'Copy',\n\n  /** The Cursor Select key, CrSel. */\n  CrSel = 'CrSel',\n\n  /** The Cut key (on certain extended keyboards). */\n  Cut = 'Cut',\n\n  /** The Delete key, Del. */\n  Delete = 'Delete',\n\n  /** Erase to End of Field. Deletes all characters from the current cursor position to the end of the current field. */\n  EraseEof = 'EraseEof',\n\n  /** The ExSel (Extend Selection) key. */\n  ExSel = 'ExSel',\n\n  /** The Insert key, Ins. Toggles between inserting and overwriting text. */\n  Insert = 'Insert',\n\n  /** Paste from the clipboard. */\n  Paste = 'Paste',\n\n  /** Redo the last action. */\n  Redo = 'Redo',\n\n  /** Undo the last action. */\n  Undo = 'Undo',\n\n  /** The Accept, Commit, or OK key or button. Accepts the currently selected option or input method sequence conversion. */\n  Accept = 'Accept',\n\n  /** The Again key. Redoes or repeats a previous action. */\n  Again = 'Again',\n\n  /** The Attn (Attention) key. */\n  Attn = 'Attn',\n\n  /** The Cancel key. */\n  Cancel = 'Cancel',\n\n  /** Shows the context menu. Typically found between the Windows (or OS) key and the Control key on the right side of the keyboard. */\n  ContextMenu = 'ContextMenu',\n\n  /** The Esc (Escape) key. Typically used as an exit, cancel, or \"escape this operation\" button. Historically, the Escape character was used to signal the start of a special control sequence of characters called an \"escape sequence.\" */\n  Escape = 'Escape',\n\n  /** The Execute key. */\n  Execute = 'Execute',\n\n  /** The Find key. Opens an interface (typically a dialog box) for performing a find/search operation. */\n  Find = 'Find',\n\n  /** The Finish key. */\n  Finish = 'Finish',\n\n  /** The Help key. Opens or toggles the display of help information. */\n  Help = 'Help',\n\n  /**\n   * The Pause key. Pauses the current application or state, if applicable.\n   * Note: This shouldn't be confused with the \"MediaPause\" key value, which is used for media controllers, rather than to control applications and processes.\n   */\n  Pause = 'Pause',\n\n  /**\n   * The Play key. Resumes a previously paused application, if applicable.\n   * Note: This shouldn't be confused with the \"MediaPlay\" key value, which is used for media controllers, rather than to control applications and processes.\n   */\n  Play = 'Play',\n\n  /** The Props (Properties) key. */\n  Props = 'Props',\n\n  /** The Select key. */\n  Select = 'Select',\n\n  /** The ZoomIn key. */\n  ZoomIn = 'ZoomIn',\n\n  /** The ZoomOut key. */\n  ZoomOut = 'ZoomOut',\n\n  /** The Brightness Down key. Typically used to reduce the brightness of the display. */\n  BrightnessDown = 'BrightnessDown',\n\n  /** The Brightness Up key. Typically increases the brightness of the display. */\n  BrightnessUp = 'BrightnessUp',\n\n  /** The Eject key. Ejects removable media (or toggles an optical storage device tray open and closed). */\n  Eject = 'Eject',\n\n  /** The LogOff key. */\n  LogOff = 'LogOff',\n\n  /**\n   * The Power button or key, to toggle power on and off.\n   * Note: Not all systems pass this key through to the user agent.\n   */\n  Power = 'Power',\n\n  /** The PowerOff or PowerDown key. Shuts off the system. */\n  PowerOff = 'PowerOff',\n\n  /** The PrintScreen or PrtScr key. Sometimes SnapShot. Captures the screen and prints it or saves it to disk. */\n  PrintScreen = 'PrintScreen',\n\n  /** The Hibernate key. This saves the state of the computer to disk and then shuts down; the computer can be returned to its previous state by restoring the saved state information. */\n  Hibernate = 'Hibernate',\n\n  /** The Standby key. (Also known as Suspend or Sleep.) This turns off the display and puts the computer in a low power consumption mode, without completely powering off. */\n  Standby = 'Standby',\n\n  /** The WakeUp key. Used to wake the computer from the hibernation or standby modes. */\n  WakeUp = 'WakeUp',\n\n  /** The All Candidates key, which starts multi-candidate mode, in which multiple candidates are displayed for the ongoing input. */\n  AllCandidates = 'AllCandidates',\n\n  /** The Alphanumeric key. */\n  Alphanumeric = 'Alphanumeric',\n\n  /** The Code Input key, which enables code input mode, which lets the user enter characters by typing their code points (their Unicode character numbers, typically). */\n  CodeInput = 'CodeInput',\n\n  /** The Compose key. */\n  Compose = 'Compose',\n\n  /** The Convert key, which instructs the IME to convert the current input method sequence into the resulting character. */\n  Convert = 'Convert',\n\n  /**\n   * A dead \"combining\" key; that is, a key which is used in tandem with other keys to generate accented and other modified characters. If pressed by itself, it doesn't generate a character.\n   * If you wish to identify which specific dead key was pressed (in cases where more than one exists), you can do so by examining the KeyboardEvent's associated compositionupdate event's  data property.\n   */\n  Dead = 'Dead',\n\n  /** The Final (Final Mode) key is used on some Asian keyboards to enter final mode when using IMEs. */\n  FinalMode = 'FinalMode',\n\n  /** Switches to the first character group on an ISO/IEC 9995 keyboard. Each key may have multiple groups of characters, each in its own column. Pressing this key instructs the device to interpret keypresses as coming from the first column on subsequent keystrokes. */\n  GroupFirst = 'GroupFirst',\n\n  /** Switches to the last character group on an ISO/IEC 9995 keyboard. */\n  GroupLast = 'GroupLast',\n\n  /** Switches to the next character group on an ISO/IEC 9995 keyboard. */\n  GroupNext = 'GroupNext',\n\n  /** Switches to the previous character group on an ISO/IEC 9995 keyboard. */\n  GroupPrevious = 'GroupPrevious',\n\n  /** The Mode Change key. Toggles or cycles among input modes of IMEs. */\n  ModeChange = 'ModeChange',\n\n  /** The Next Candidate function key. Selects the next possible match for the ongoing input. */\n  NextCandidate = 'NextCandidate',\n\n  /** The NonConvert (\"Don't convert\") key. This accepts the current input method sequence without running conversion when using an IME. */\n  NonConvert = 'NonConvert',\n\n  /** The Previous Candidate key. Selects the previous possible match for the ongoing input. */\n  PreviousCandidate = 'PreviousCandidate',\n\n  /** The Process key. Instructs the IME to process the conversion. */\n  Process = 'Process',\n\n  /** The Single Candidate key. Enables single candidate mode (as opposed to multi-candidate mode); in this mode, only one candidate is displayed at a time. */\n  SingleCandidate = 'SingleCandidate',\n\n  /** The Hangul (Korean character set) mode key, which toggles between Hangul and English entry modes. */\n  HangulMode = 'HangulMode',\n\n  /** Selects the Hanja mode, for converting Hangul characters to the more specific Hanja characters. */\n  HanjaMode = 'HanjaMode',\n\n  /** Selects the Junja mode, in which Korean is represented using single-byte Latin characters. */\n  JunjaMode = 'JunjaMode',\n\n  /** The Eisu key. This key's purpose is defined by the IME, but may be used to close the IME. */\n  Eisu = 'Eisu',\n\n  /** The Hankaku (half-width characters) key. */\n  Hankaku = 'Hankaku',\n\n  /** The Hiragana key; selects Kana characters mode. */\n  Hiragana = 'Hiragana',\n\n  /** Toggles between the Hiragana and Katakana writing systems. */\n  HiraganaKatakana = 'HiraganaKatakana',\n\n  /** The Kana Mode (Kana Lock) key. */\n  KanaMode = 'KanaMode',\n\n  /** The Kanji Mode key. Enables entering Japanese text using the ideographic characters of Chinese origin. */\n  KanjiMode = 'KanjiMode',\n\n  /** The Katakana key. */\n  Katakana = 'Katakana',\n\n  /** The Romaji key; selects the Roman character set. */\n  Romaji = 'Romaji',\n\n  /** The Zenkaku (full width) characters key. */\n  Zenkaku = 'Zenkaku',\n\n  /** The Zenkaku/Hankaku (full width/half width) toggle key. */\n  ZenkakuHanaku = 'ZenkakuHanaku',\n\n  /** The first general-purpose function key, F1. */\n  F1 = 'F1',\n\n  /** The F2 key. */\n  F2 = 'F2',\n\n  /** The F3 key. */\n  F3 = 'F3',\n\n  /** The F4 key. */\n  F4 = 'F4',\n\n  /** The F5 key. */\n  F5 = 'F5',\n\n  /** The F6 key. */\n  F6 = 'F6',\n\n  /** The F7 key. */\n  F7 = 'F7',\n\n  /** The F8 key. */\n  F8 = 'F8',\n\n  /** The F9 key. */\n  F9 = 'F9',\n\n  /** The F10 key. */\n  F10 = 'F10',\n\n  /** The F11 key. */\n  F11 = 'F11',\n\n  /** The F12 key. */\n  F12 = 'F12',\n\n  /** The F13 key. */\n  F13 = 'F13',\n\n  /** The F14 key. */\n  F14 = 'F14',\n\n  /** The F15 key. */\n  F15 = 'F15',\n\n  /** The F16 key. */\n  F16 = 'F16',\n\n  /** The F17 key. */\n  F17 = 'F17',\n\n  /** The F18 key. */\n  F18 = 'F18',\n\n  /** The F19 key. */\n  F19 = 'F19',\n\n  /** The F20 key. */\n  F20 = 'F20',\n\n  /** The first general-purpose virtual function key. */\n  Soft1 = 'Soft1',\n\n  /** The second general-purpose virtual function key. */\n  Soft2 = 'Soft2',\n\n  /** The third general-purpose virtual function key. */\n  Soft3 = 'Soft3',\n\n  /** The fourth general-purpose virtual function key. */\n  Soft4 = 'Soft4',\n\n  /** Presents a list of recently-used applications which lets the user change apps quickly. */\n  AppSwitch = 'AppSwitch',\n\n  /** The Call key. Dials the number which has been entered. */\n  Call = 'Call',\n\n  /** The Camera key. Activates the camera. */\n  Camera = 'Camera',\n\n  /** The Focus key. Focuses the camera. */\n  CameraFocus = 'CameraFocus',\n\n  /** The End Call or Hang Up button. */\n  EndCall = 'EndCall',\n\n  /** The Back button. */\n  GoBack = 'GoBack',\n\n  /** The Home button. Returns the user to the phone's main screen (usually an application launcher). */\n  GoHome = 'GoHome',\n\n  /** The Headset Hook key. This is typically actually a button on the headset which is used to hang up calls and play or pause media. */\n  HeadsetHook = 'HeadsetHook',\n\n  /** The Redial button. Redials the last-called number. */\n  LastNumberRedial = 'LastNumberRedial',\n\n  /** The Notification key. */\n  Notification = 'Notification',\n\n  /** A button which cycles among the notification modes: silent, vibrate, ring, and so forth. */\n  MannerMode = 'MannerMode',\n\n  /** The Voice Dial key. Initiates voice dialing. */\n  VoiceDial = 'VoiceDial',\n\n  /** Switches to the previous channel. */\n  ChannelDown = 'ChannelDown',\n\n  /** Switches to the next channel. */\n  ChannelUp = 'ChannelUp',\n\n  /** Starts, continues, or increases the speed of fast forwarding the media. */\n  MediaFastForward = 'MediaFastForward',\n\n  /**\n   * Pauses the currently playing media.\n   * Note: Some older applications use \"Pause\", but this is not correct.\n   */\n  MediaPause = 'MediaPause',\n\n  /** Starts or continues playing media at normal speed, if not already doing so. Has no effect otherwise. */\n  MediaPlay = 'MediaPlay',\n\n  /** Toggles between playing and pausing the current media. */\n  MediaPlayPause = 'MediaPlayPause',\n\n  /** Starts or resumes recording media. */\n  MediaRecord = 'MediaRecord',\n\n  /** Starts, continues, or increases the speed of rewinding the media. */\n  MediaRewind = 'MediaRewind',\n\n  /** Stops the current media activity (such as playing, recording, pausing, forwarding, or rewinding). Has no effect if the media is currently stopped already. */\n  MediaStop = 'MediaStop',\n\n  /** Seeks to the next media or program track. */\n  MediaTrackNext = 'MediaTrackNext',\n\n  /** Seeks to the previous media or program track. */\n  MediaTrackPrevious = 'MediaTrackPrevious',\n\n  /** Adjusts audio balance toward the left. */\n  AudioBalanceLeft = 'AudioBalanceLeft',\n\n  /** Adjusts audio balance toward the right. */\n  AudioBalanceRight = 'AudioBalanceRight',\n\n  /** Decreases the amount of bass. */\n  AudioBassDown = 'AudioBassDown',\n\n  /** Reduces bass boosting or cycles downward through bass boost modes or states. */\n  AudioBassBoostDown = 'AudioBassBoostDown',\n\n  /** Toggles bass boosting on and off. */\n  AudioBassBoostToggle = 'AudioBassBoostToggle',\n\n  /** Increases the amoung of bass boosting, or cycles upward through a set of bass boost modes or states. */\n  AudioBassBoostUp = 'AudioBassBoostUp',\n\n  /** Increases the amount of bass. */\n  AudioBassUp = 'AudioBassUp',\n\n  /** Adjusts the audio fader toward the front. */\n  AudioFaderFront = 'AudioFaderFront',\n\n  /** Adjusts the audio fader toward the rear. */\n  AudioFaderRear = 'AudioFaderRear',\n\n  /** Selects the next available surround sound mode. */\n  AudioSurroundModeNext = 'AudioSurroundModeNext',\n\n  /** Decreases the amount of treble. */\n  AudioTrebleDown = 'AudioTrebleDown',\n\n  /** Increases the amount of treble. */\n  AudioTrebleUp = 'AudioTrebleUp',\n\n  /** Decreases the audio volume. */\n  AudioVolumeDown = 'AudioVolumeDown',\n\n  /** Mutes the audio. */\n  AudioVolumeMute = 'AudioVolumeMute',\n\n  /** Increases the audio volume. */\n  AudioVolumeUp = 'AudioVolumeUp',\n\n  /** Toggles the microphone on and off. */\n  MicrophoneToggle = 'MicrophoneToggle',\n\n  /** Decreases the microphone's input volume. */\n  MicrophoneVolumeDown = 'MicrophoneVolumeDown',\n\n  /** Mutes the microphone input. */\n  MicrophoneVolumeMute = 'MicrophoneVolumeMute',\n\n  /** Increases the microphone's input volume. */\n  MicrophoneVolumeUp = 'MicrophoneVolumeUp',\n\n  /** Switches into TV viewing mode. */\n  TV = 'TV',\n\n  /** Toggles 3D TV mode on and off. */\n  TV3DMode = 'TV3DMode',\n\n  /** Toggles between antenna and cable inputs. */\n  TVAntennaCable = 'TVAntennaCable',\n\n  /** Toggles audio description mode on and off. */\n  TVAudioDescription = 'TVAudioDescription',\n\n  /** Decreases trhe audio description's mixing volume; reduces the volume of the audio descriptions relative to the program sound. */\n  TVAudioDescriptionMixDown = 'TVAudioDescriptionMixDown',\n\n  /** Increases the audio description's mixing volume; increases the volume of the audio descriptions relative to the program sound. */\n  TVAudioDescriptionMixUp = 'TVAudioDescriptionMixUp',\n\n  /** Displays or hides the media contents available for playback (this may be a channel guide showing the currently airing programs, or a list of media files to play). */\n  TVContentsMenu = 'TVContentsMenu',\n\n  /** Displays or hides the TV's data service menu. */\n  TVDataService = 'TVDataService',\n\n  /** Cycles the input mode on an external TV. */\n  TVInput = 'TVInput',\n\n  /** Switches to the input \"Component 1.\" */\n  TVInputComponent1 = 'TVInputComponent1',\n\n  /** Switches to the input \"Component 2.\" */\n  TVInputComponent2 = 'TVInputComponent2',\n\n  /** Switches to the input \"Composite 1.\" */\n  TVInputComposite1 = 'TVInputComposite1',\n\n  /** Switches to the input \"Composite 2.\" */\n  TVInputComposite2 = 'TVInputComposite2',\n\n  /** Switches to the input \"HDMI 1.\" */\n  TVInputHDMI1 = 'TVInputHDMI1',\n\n  /** Switches to the input \"HDMI 2.\" */\n  TVInputHDMI2 = 'TVInputHDMI2',\n\n  /** Switches to the input \"HDMI 3.\" */\n  TVInputHDMI3 = 'TVInputHDMI3',\n\n  /** Switches to the input \"HDMI 4.\" */\n  TVInputHDMI4 = 'TVInputHDMI4',\n\n  /** Switches to the input \"VGA 1.\" */\n  TVInputVGA1 = 'TVInputVGA1',\n\n  /** The Media Context menu key. */\n  TVMediaContext = 'TVMediaContext',\n\n  /** Toggle the TV's network connection on and off. */\n  TVNetwork = 'TVNetwork',\n\n  /** Put the TV into number entry mode. */\n  TVNumberEntry = 'TVNumberEntry',\n\n  /** The device's power button. */\n  TVPower = 'TVPower',\n\n  /** Radio button. */\n  TVRadioService = 'TVRadioService',\n\n  /** Satellite button. */\n  TVSatellite = 'TVSatellite',\n\n  /** Broadcast Satellite button. */\n  TVSatelliteBS = 'TVSatelliteBS',\n\n  /** Communication Satellite button. */\n  TVSatelliteCS = 'TVSatelliteCS',\n\n  /** Toggles among available satellites. */\n  TVSatelliteToggle = 'TVSatelliteToggle',\n\n  /** Selects analog terrestrial television service (analog cable or antenna reception). */\n  TVTerrestrialAnalog = 'TVTerrestrialAnalog',\n\n  /** Selects digital terrestrial television service (digital cable or antenna receiption). */\n  TVTerrestrialDigital = 'TVTerrestrialDigital',\n\n  /** Timer programming button. */\n  TVTimer = 'TVTimer',\n\n  /** Changes the input mode on an external audio/video receiver (AVR) unit. */\n  AVRInput = 'AVRInput',\n\n  /** Toggles the power on an external AVR unit. */\n  AVRPower = 'AVRPower',\n\n  /** General-purpose media function key, color-coded red. This has index 0 among the colored keys. */\n  ColorF0Red = 'ColorF0Red',\n\n  /** General-purpose media funciton key, color-coded green. This has index 1 among the colored keys. */\n  ColorF1Green = 'ColorF1Green',\n\n  /** General-purpose media funciton key, color-coded yellow. This has index 2 among the colored keys. */\n  ColorF2Yellow = 'ColorF2Yellow',\n\n  /** General-purpose media funciton key, color-coded blue. This has index 3 among the colored keys. */\n  ColorF3Blue = 'ColorF3Blue',\n\n  /** General-purpose media funciton key, color-coded grey. This has index 4 among the colored keys. */\n  ColorF4Grey = 'ColorF4Grey',\n\n  /** General-purpose media funciton key, color-coded brown. This has index 5 among the colored keys. */\n  ColorF5Brown = 'ColorF5Brown',\n\n  /** Toggles closed captioning on and off. */\n  ClosedCaptionToggle = 'ClosedCaptionToggle',\n\n  /** Adjusts the brightness of the device by toggling between two brightness levels or by cycling among multiple brightness levels. */\n  Dimmer = 'Dimmer',\n\n  /** Cycles among video sources. */\n  DisplaySwap = 'DisplaySwap',\n\n  /** Switches the input source to the Digital Video Recorder (DVR). */\n  DVR = 'DVR',\n\n  /** The Exit button, which exits the curreent application or menu. */\n  Exit = 'Exit',\n\n  /** Clears the program or content stored in the first favorites list slot. */\n  FavoriteClear0 = 'FavoriteClear0',\n\n  /** Clears the program or content stored in the second favorites list slot. */\n  FavoriteClear1 = 'FavoriteClear1',\n\n  /** Clears the program or content stored in the third favorites list slot. */\n  FavoriteClear2 = 'FavoriteClear2',\n\n  /** Clears the program or content stored in the fourth favorites list slot. */\n  FavoriteClear3 = 'FavoriteClear3',\n\n  /** Selects (recalls) the program or content stored in the first favorites list slot. */\n  FavoriteRecall0 = 'FavoriteRecall0',\n\n  /** Selects (recalls) the program or content stored in the second favorites list slot. */\n  FavoriteRecall1 = 'FavoriteRecall1',\n\n  /** Selects (recalls) the program or content stored in the third favorites list slot. */\n  FavoriteRecall2 = 'FavoriteRecall2',\n\n  /** Selects (recalls) the program or content stored in the fourth favorites list slot. */\n  FavoriteRecall3 = 'FavoriteRecall3',\n\n  /** Stores the current program or content into the first favorites list slot. */\n  FavoriteStore0 = 'FavoriteStore0',\n\n  /** Stores the current program or content into the second favorites list slot. */\n  FavoriteStore1 = 'FavoriteStore1',\n\n  /** Stores the current program or content into the third favorites list slot. */\n  FavoriteStore2 = 'FavoriteStore2',\n\n  /** Stores the current program or content into the fourth favorites list slot. */\n  FavoriteStore3 = 'FavoriteStore3',\n\n  /** Toggles the display of the program or content guide. */\n  Guide = 'Guide',\n\n  /** If the guide is currently displayed, this button tells the guide to display the next day's content. */\n  GuideNextDay = 'GuideNextDay',\n\n  /** If the guide is currently displayed, this button tells the guide to display the previous day's content. */\n  GuidePreviousDay = 'GuidePreviousDay',\n\n  /** Toggles the display of information about the currently selected content, program, or media. */\n  Info = 'Info',\n\n  /** Tells the device to perform an instant replay (typically some form of jumping back a short amount of time then playing it again, possibly but not usually in slow motion). */\n  InstantReplay = 'InstantReplay',\n\n  /** Opens content liniked to the current program, if available and possible. */\n  Link = 'Link',\n\n  /** Lists the current program. */\n  ListProgram = 'ListProgram',\n\n  /** Toggles a display listing currently available live content or programs. */\n  LiveContent = 'LiveContent',\n\n  /** Locks or unlocks the currently selected content or pgoram. */\n  Lock = 'Lock',\n\n  /** Presents a list of media applications, such as photo viewers, audio and video players, and games. [1] */\n  MediaApps = 'MediaApps',\n\n  /** The Audio Track key. */\n  MediaAudioTrack = 'MediaAudioTrack',\n\n  /** Jumps back to the last-viewed content, program, or other media. */\n  MediaLast = 'MediaLast',\n\n  /** Skips backward to the previous content or program. */\n  MediaSkipBackward = 'MediaSkipBackward',\n\n  /** Skips forward to the next content or program. */\n  MediaSkipForward = 'MediaSkipForward',\n\n  /** Steps backward to the previous content or program. */\n  MediaStepBackward = 'MediaStepBackward',\n\n  /** Steps forward to the next content or program. */\n  MediaStepForward = 'MediaStepForward',\n\n  /** Top Menu button. Opens the media's main menu (e.g., for a DVD or Blu-Ray disc). */\n  MediaTopMenu = 'MediaTopMenu',\n\n  /** Navigates into a submenu or option. */\n  NavigateIn = 'NavigateIn',\n\n  /** Navigates to the next item. */\n  NavigateNext = 'NavigateNext',\n\n  /** Navigates out of the current screen or menu. */\n  NavigateOut = 'NavigateOut',\n\n  /** Navigates to the previous item. */\n  NavigatePrevious = 'NavigatePrevious',\n\n  /** Cycles to the next channel in the favorites list. */\n  NextFavoriteChannel = 'NextFavoriteChannel',\n\n  /** Cycles to the next saved user profile, if this feature is supported and multiple profiles exist. */\n  NextUserProfile = 'NextUserProfile',\n\n  /** Opens the user interface for selecting on demand content or programs to watch. */\n  OnDemand = 'OnDemand',\n\n  /** Starts the process of pairing the remote with a device to be controlled. */\n  Pairing = 'Pairing',\n\n  /** A button to move the picture-in-picture view downward. */\n  PinPDown = 'PinPDown',\n\n  /** A button to control moving the picture-in-picture view. */\n  PinPMove = 'PinPMove',\n\n  /** Toggles display of th epicture-in-picture view on and off. */\n  PinPToggle = 'PinPToggle',\n\n  /** A button to move the picture-in-picture view upward. */\n  PinPUp = 'PinPUp',\n\n  /** Decreases the media playback rate. */\n  PlaySpeedDown = 'PlaySpeedDown',\n\n  /** Returns the media playback rate to normal. */\n  PlaySpeedReset = 'PlaySpeedReset',\n\n  /** Increases the media playback rate. */\n  PlaySpeedUp = 'PlaySpeedUp',\n\n  /** Toggles random media (also known as \"shuffle mode\") on and off. */\n  RandomToggle = 'RandomToggle',\n\n  /** A code sent when the remote control's battery is low. This doesn't actually correspond to a physical key at all. */\n  RcLowBattery = 'RcLowBattery',\n\n  /** Cycles among the available media recording speeds. */\n  RecordSpeedNext = 'RecordSpeedNext',\n\n  /** Toggles radio frequency (RF) input bypass mode on and off. RF bypass mode passes RF input directly to the RF output without any processing or filtering. */\n  RfBypass = 'RfBypass',\n\n  /** Toggles the channel scan mode on and off. This is a mode which flips through channels automatically until the user stops the scan. */\n  ScanChannelsToggle = 'ScanChannelsToggle',\n\n  /** Cycles through the available screen display modes. */\n  ScreenModeNext = 'ScreenModeNext',\n\n  /** Toggles display of the device's settings screen on and off. */\n  Settings = 'Settings',\n\n  /** Toggles split screen display mode on and off. */\n  SplitScreenToggle = 'SplitScreenToggle',\n\n  /** Cycles among input modes on an external set-top box (STB). */\n  STBInput = 'STBInput',\n\n  /** Toggles on and off an external STB. */\n  STBPower = 'STBPower',\n\n  /** Toggles the display of subtitles on and off if they're available. */\n  Subtitle = 'Subtitle',\n\n  /** Toggles display of teletext, if available. */\n  Teletext = 'Teletext',\n\n  /** Cycles through the available video modes. */\n  VideoModeNext = 'VideoModeNext',\n\n  /** Causes the device to identify itself in some fashion, such as by flashing a light, briefly changing the brightness of indicator lights, or emitting a tone. */\n  Wink = 'Wink',\n\n  /** Toggles between full-screen and scaled content display, or otherwise change the magnification level. */\n  ZoomToggle = 'ZoomToggle',\n\n  /** Presents a list of possible corrections for a word which was incorrectly identified. */\n  SpeechCorrectionList = 'SpeechCorrectionList',\n\n  /** Toggles between dictation mode and command/control mode. This lets the speech engine know whether to interpret spoken words as input text or as commands. */\n  SpeechInputToggle = 'SpeechInputToggle',\n\n  /** Closes the current document or message. Must not exit the application. */\n  Close = 'Close',\n\n  /** Creates a new document or message. */\n  New = 'New',\n\n  /** Opens an existing document or message. */\n  Open = 'Open',\n\n  /** Prints the current document or message. */\n  Print = 'Print',\n\n  /** Saves the current document or message. */\n  Save = 'Save',\n\n  /** Starts spell checking the current document. */\n  SpellCheck = 'SpellCheck',\n\n  /** Opens the user interface to forward a message. */\n  MailForward = 'MailForward',\n\n  /** Opens the user interface to reply to a message. */\n  MailReply = 'MailReply',\n\n  /** Sends the current message. */\n  MailSend = 'MailSend',\n\n  /** The Calculator key, often labeled with an icon. This is often used as a generic application launcher key (APPCOMMAND_LAUNCH_APP2). */\n  LaunchCalculator = 'LaunchCalculator',\n\n  /** The Calendar key. Often labeled with an icon. */\n  LaunchCalendar = 'LaunchCalendar',\n\n  /** The Contacts key. */\n  LaunchContacts = 'LaunchContacts',\n\n  /** The Mail key. Often labeled with an icon. */\n  LaunchMail = 'LaunchMail',\n\n  /** The Media Player key. */\n  LaunchMediaPlayer = 'LaunchMediaPlayer',\n\n  /** The Music Player key. Often labeled with an icon. */\n  LaunchMusicPlayer = 'LaunchMusicPlayer',\n\n  /** The My Computer key on Windows keyboards. This is often used as a generic application launcher key (APPCOMMAND_LAUNCH_APP1). */\n  LaunchMyComputer = 'LaunchMyComputer',\n\n  /** The Phone key. Opens the phone dialer application (if one is present). */\n  LaunchPhone = 'LaunchPhone',\n\n  /** The Screen Saver key. */\n  LaunchScreenSaver = 'LaunchScreenSaver',\n\n  /** The Spreadsheet key. This key may be labeled with an icon. */\n  LaunchSpreadsheet = 'LaunchSpreadsheet',\n\n  /** The Web Browser key. This key is frequently labeled with an icon. */\n  LaunchWebBrowser = 'LaunchWebBrowser',\n\n  /** The WebCam key. Opens the webcam application. */\n  LaunchWebCam = 'LaunchWebCam',\n\n  /** The Word Processor key. This may be an icon of a specific word processor application, or a generic document icon. */\n  LaunchWordProcessor = 'LaunchWordProcessor',\n\n  /** The first generic application launcher button. */\n  LaunchApplication1 = 'LaunchApplication1',\n\n  /** The second generic application launcher button. */\n  LaunchApplication2 = 'LaunchApplication2',\n\n  /** The third generic application launcher button. */\n  LaunchApplication3 = 'LaunchApplication3',\n\n  /** The fourth generic application launcher button. */\n  LaunchApplication4 = 'LaunchApplication4',\n\n  /** The fifth generic application launcher button. */\n  LaunchApplication5 = 'LaunchApplication5',\n\n  /** The sixth generic application launcher button. */\n  LaunchApplication6 = 'LaunchApplication6',\n\n  /** The seventh generic application launcher button. */\n  LaunchApplication7 = 'LaunchApplication7',\n\n  /** The eighth generic application launcher button. */\n  LaunchApplication8 = 'LaunchApplication8',\n\n  /** The ninth generic application launcher button. */\n  LaunchApplication9 = 'LaunchApplication9',\n\n  /** The 10th generic application launcher button. */\n  LaunchApplication10 = 'LaunchApplication10',\n\n  /** The 11th generic application launcher button. */\n  LaunchApplication11 = 'LaunchApplication11',\n\n  /** The 12th generic application launcher button. */\n  LaunchApplication12 = 'LaunchApplication12',\n\n  /** The 13th generic application launcher button. */\n  LaunchApplication13 = 'LaunchApplication13',\n\n  /** The 14th generic application launcher button. */\n  LaunchApplication14 = 'LaunchApplication14',\n\n  /** The 15th generic application launcher button. */\n  LaunchApplication15 = 'LaunchApplication15',\n\n  /** The 16th generic application launcher button. */\n  LaunchApplication16 = 'LaunchApplication16',\n\n  /** Navigates to the previous content or page in the current Web view's history. */\n  BrowserBack = 'BrowserBack',\n\n  /** Opens the user's list of bookmarks/favorites. */\n  BrowserFavorites = 'BrowserFavorites',\n\n  /** Navigates to the next content or page in the current Web view's history. */\n  BrowserForward = 'BrowserForward',\n\n  /** Navigates to the user's preferred home page. */\n  BrowserHome = 'BrowserHome',\n\n  /** Refreshes the current page or content. */\n  BrowserRefresh = 'BrowserRefresh',\n\n  /** Activates the user's preferred search engine or the search interface within their browser. */\n  BrowserSearch = 'BrowserSearch',\n\n  /** Stops loading the currently displayed Web view or content. */\n  BrowserStop = 'BrowserStop',\n\n  /**\n   * The decimal point key (typically . or , depending on the region).\n   * In newer browsers, this value to be the character generated by the decimal key (one of those two characters). [1]\n   */\n  Decimal = 'Decimal',\n\n  /** The 11 key found on certain media numeric keypads. */\n  Key11 = 'Key11',\n\n  /** The 12 key found on certain media numeric keypads. */\n  Key12 = 'Key12',\n\n  /** The numeric keypad's multiplication key, *. */\n  Multiply = 'Multiply',\n\n  /** The numeric keypad's addition key, +. */\n  Add = 'Add',\n\n  /** The numeric keypad's division key, /. */\n  Divide = 'Divide',\n\n  /** The numeric keypad's subtraction key, -. */\n  Subtract = 'Subtract',\n\n  /**\n   * The numeric keypad's places separator character.\n   * (In the United States this is a comma, but elsewhere it is frequently a period.)\n   */\n  Separator = 'Separator',\n\n  /**\n   * The Spacebar\n   */\n  Space = ' ',\n}\n"]}