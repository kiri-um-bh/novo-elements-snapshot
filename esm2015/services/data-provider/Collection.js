//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29sbGVjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ydW5uZXIvd29yay9ub3ZvLWVsZW1lbnRzL25vdm8tZWxlbWVudHMvcHJvamVjdHMvbm92by1lbGVtZW50cy9zcmMvIiwic291cmNlcyI6WyJzZXJ2aWNlcy9kYXRhLXByb3ZpZGVyL0NvbGxlY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29sbGVjdGlvbkV2ZW50IH0gZnJvbSAnLi9Db2xsZWN0aW9uRXZlbnQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbGxlY3Rpb248VD4ge1xuICBkYXRhQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q29sbGVjdGlvbkV2ZW50PjtcbiAgbGVuZ3RoOiBudW1iZXI7XG4gIHRvdGFsOiBudW1iZXI7XG4gIHNvdXJjZTogQXJyYXk8VD47XG4gIGZpbHRlckRhdGE6IEFycmF5PFQ+O1xuICBsaXN0OiBBcnJheTxUPjtcbiAgZmlsdGVyOiBhbnk7XG4gIHNvcnQ6IEFycmF5PGFueT47XG5cbiAgaXNFbXB0eSgpOiBib29sZWFuO1xuICBoYXNFcnJvcnMoKTogYm9vbGVhbjtcbiAgaXNMb2FkaW5nKCk6IGJvb2xlYW47XG4gIGlzRmlsdGVyZWQoKTogYm9vbGVhbjtcblxuICAvKipcbiAgICogIEFkZHMgdGhlIHNwZWNpZmllZCBpdGVtIHRvIHRoZSBlbmQgb2YgdGhlIGxpc3QuXG4gICAqICBFcXVpdmFsZW50IHRvIDxjb2RlPmFkZEl0ZW1BdChpdGVtLCBsZW5ndGgpPC9jb2RlPi5cbiAgICpcbiAgICogIEBwYXJhbSBpdGVtIFRoZSBpdGVtIHRvIGFkZC5cbiAgICovXG4gIGFkZEl0ZW0oaXRlbTogVCk6IHZvaWQ7XG4gIC8qKlxuICAgKiAgQWRkcyB0aGUgaXRlbSBhdCB0aGUgc3BlY2lmaWVkIGluZGV4LlxuICAgKiAgVGhlIGluZGV4IG9mIGFueSBpdGVtIGdyZWF0ZXIgdGhhbiB0aGUgaW5kZXggb2YgdGhlIGFkZGVkIGl0ZW0gaXMgaW5jcmVhc2VkIGJ5IG9uZS5cbiAgICogIElmIHRoZSB0aGUgc3BlY2lmaWVkIGluZGV4IGlzIGxlc3MgdGhhbiB6ZXJvIG9yIGdyZWF0ZXIgdGhhbiB0aGUgbGVuZ3RoXG4gICAqICBvZiB0aGUgbGlzdCwgYSBSYW5nZUVycm9yIGlzIHRocm93bi5cbiAgICogIEBwYXJhbSBpdGVtIFRoZSBpdGVtIHRvIHBsYWNlIGF0IHRoZSBpbmRleC5cbiAgICogIEBwYXJhbSBpbmRleCBUaGUgaW5kZXggYXQgd2hpY2ggdG8gcGxhY2UgdGhlIGl0ZW0uXG4gICAqICBAdGhyb3dzIFJhbmdlRXJyb3IgaWYgaW5kZXggaXMgbGVzcyB0aGFuIDAgb3IgZ3JlYXRlciB0aGFuIHRoZSBsZW5ndGggb2YgdGhlIGxpc3QuXG4gICAqL1xuICBhZGRJdGVtQXQoaXRlbTogVCwgaW5kZXg6IG51bWJlcik6IHZvaWQ7XG5cbiAgLyoqXG4gICAqICBBZGRzIGFsbCBvZiB0aGUgaXRlbXMgdG8gdGhlIGVuZCBvZiB0aGUgbGlzdFxuICAgKiAgQHBhcmFtIGl0ZW1zIFRoZSBpdGVtcyB0byBwbGFjZSBhdCB0aGUgZW5kIG9mIHRoZSBsaXN0LlxuICAgKi9cbiAgYWRkSXRlbXMoaXRlbXM6IEFycmF5PFQ+KTogdm9pZDtcblxuICAvKipcbiAgICogIEdldHMgdGhlIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCBpbmRleC5cbiAgICogIEBwYXJhbSBpbmRleCBUaGUgaW5kZXggaW4gdGhlIGxpc3QgZnJvbSB3aGljaCB0byByZXRyaWV2ZSB0aGUgaXRlbS5cbiAgICogIEBwYXJhbSBwcmVmZXRjaCBBbiA8Y29kZT5udW1iZXI8L2NvZGU+IGluZGljYXRpbmcgYm90aCB0aGUgZGlyZWN0aW9uXG4gICAqICBhbmQgbnVtYmVyIG9mIGl0ZW1zIHRvIGZldGNoIGR1cmluZyB0aGUgcmVxdWVzdCBpZiB0aGUgaXRlbSBpc1xuICAgKiAgbm90IGxvY2FsLlxuICAgKiAgQHJldHVybiBUaGUgaXRlbSBhdCB0aGF0IGluZGV4LCBvciA8Y29kZT5udWxsPC9jb2RlPiBpZiB0aGVyZSBpcyBub25lLlxuICAgKiAgQHRocm93cyBteC5jb2xsZWN0aW9ucy5lcnJvcnMuSXRlbVBlbmRpbmdFcnJvciBpZiB0aGUgZGF0YSBmb3IgdGhhdCBpbmRleCBuZWVkcyB0byBiZVxuICAgKiAgbG9hZGVkIGZyb20gYSByZW1vdGUgbG9jYXRpb24uXG4gICAqICBAdGhyb3dzIFJhbmdlRXJyb3IgaWYgPGNvZGU+aW5kZXggJmx0OyAwPC9jb2RlPlxuICAgKiAgb3IgPGNvZGU+aW5kZXggPj0gbGVuZ3RoPC9jb2RlPi5cbiAgICovXG4gIGdldEl0ZW1BdChpbmRleDogbnVtYmVyLCBwcmVmZXRjaDogbnVtYmVyKTogT2JqZWN0O1xuXG4gIC8qKlxuICAgKiAgUmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIGl0ZW0gaWYgaXQgaXMgaW4gdGhlIGxpc3Qgc3VjaCB0aGF0XG4gICAqICBnZXRJdGVtQXQoaW5kZXgpID09IGl0ZW0uXG4gICAqICBAcGFyYW0gaXRlbSBUaGUgaXRlbSB0byBmaW5kLlxuICAgKiAgQHJldHVybiBUaGUgaW5kZXggb2YgdGhlIGl0ZW0sIG9yIC0xIGlmIHRoZSBpdGVtIGlzIG5vdCBpbiB0aGUgbGlzdC5cbiAgICovXG4gIGdldEl0ZW1JbmRleChpdGVtOiBPYmplY3QpOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqICBOb3RpZmllcyB0aGUgdmlldyB0aGF0IGFuIGl0ZW0gaGFzIGJlZW4gdXBkYXRlZC5cbiAgICogIFRoaXMgaXMgdXNlZnVsIGlmIHRoZSBjb250ZW50cyBvZiB0aGUgdmlldyBkbyBub3QgaW1wbGVtZW50XG4gICAqICBJZiBhIHByb3BlcnR5IGlzIHNwZWNpZmllZCB0aGUgdmlldyBtYXkgYmUgYWJsZSB0byBvcHRpbWl6ZSBpdHNcbiAgICogIG5vdGlmaWNhdGlvbiBtZWNoYW5pc20uXG4gICAqICBPdGhlcndpc2UgaXQgbWF5IGNob29zZSB0byBzaW1wbHkgcmVmcmVzaCB0aGUgd2hvbGUgdmlldy5cbiAgICpcbiAgICogIEBwYXJhbSBpdGVtIFRoZSBpdGVtIHdpdGhpbiB0aGUgdmlldyB0aGF0IHdhcyB1cGRhdGVkLlxuICAgKiAgQHBhcmFtIHByb3BlcnR5IFRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eSB0aGF0IHdhcyB1cGRhdGVkLlxuICAgKiAgQHBhcmFtIG9sZFZhbHVlIFRoZSBvbGQgdmFsdWUgb2YgdGhhdCBwcm9wZXJ0eS4gKElmIHByb3BlcnR5IHdhcyBudWxsLFxuICAgKiAgdGhpcyBjYW4gYmUgdGhlIG9sZCB2YWx1ZSBvZiB0aGUgaXRlbS4pXG4gICAqICBAcGFyYW0gbmV3VmFsdWUgVGhlIG5ldyB2YWx1ZSBvZiB0aGF0IHByb3BlcnR5LiAoSWYgcHJvcGVydHkgd2FzIG51bGwsXG4gICAqICB0aGVyZSdzIG5vIG5lZWQgdG8gc3BlY2lmeSB0aGlzIGFzIHRoZSBpdGVtIGlzIGFzc3VtZWQgdG8gYmVcbiAgICogIHRoZSBuZXcgdmFsdWUuKVxuICAgKi9cbiAgLy8gaXRlbVVwZGF0ZWQoaXRlbTogT2JqZWN0LCBwcm9wZXJ0eT86IE9iamVjdCwgb2xkVmFsdWU/OiBPYmplY3QsIG5ld1ZhbHVlPzogT2JqZWN0KTogdm9pZDtcblxuICByZW1vdmVJdGVtKGl0ZW06IFQpOiBib29sZWFuO1xuICAvKipcbiAgICogIFJlbW92ZXMgYWxsIGl0ZW1zIGZyb20gdGhlIGxpc3QuXG4gICAqL1xuICByZW1vdmVBbGwoKTogdm9pZDtcblxuICAvKipcbiAgICogIFJlbW92ZXMgdGhlIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCBpbmRleCBhbmQgcmV0dXJucyBpdC5cbiAgICogIEFueSBpdGVtcyB0aGF0IHdlcmUgYWZ0ZXIgdGhpcyBpbmRleCBhcmUgbm93IG9uZSBpbmRleCBlYXJsaWVyLlxuICAgKiAgQHBhcmFtIGluZGV4IFRoZSBpbmRleCBmcm9tIHdoaWNoIHRvIHJlbW92ZSB0aGUgaXRlbS5cbiAgICogIEByZXR1cm4gVGhlIGl0ZW0gdGhhdCB3YXMgcmVtb3ZlZC5cbiAgICovXG4gIHJlbW92ZUl0ZW1BdChpbmRleDogbnVtYmVyKTogT2JqZWN0O1xuXG4gIC8qKlxuICAgKiAgUmV0dXJucyBhbiBBcnJheSB0aGF0IGlzIHBvcHVsYXRlZCBpbiB0aGUgc2FtZSBvcmRlciBhcyB0aGUgSUxpc3RcbiAgICogIGltcGxlbWVudGF0aW9uLlxuICAgKiAgVGhpcyBtZXRob2QgY2FuIHRocm93IGFuIEl0ZW1QZW5kaW5nRXJyb3IuXG4gICAqICBAcmV0dXJuIFRoZSBhcnJheS5cbiAgICovXG4gIHRvQXJyYXkoKTogQXJyYXk8YW55PjtcblxuICByZWZyZXNoKCk6IHZvaWQ7XG59XG4iXX0=